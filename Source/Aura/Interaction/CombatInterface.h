// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "UObject/Interface.h"
#include "CombatInterface.generated.h"

class UAnimMontage;

// This class does not need to be modified.
UINTERFACE(MinimalAPI, BlueprintType)
class UCombatInterface : public UInterface
{
	GENERATED_BODY()
};

/**
 * 
 */
class AURA_API ICombatInterface
{
	GENERATED_BODY()

	// Add interface functions to this class. This is the class that will be inherited to implement this interface.
public:
    virtual int32 GetPlayerLevel() const;

    virtual FVector GetCombatSocketLocation();

    // Blueprint implement event can't not be virtual ?
    UFUNCTION(BlueprintImplementableEvent, BlueprintCallable)
    void UpdateFacingTarget(const FVector& Target);

    // BlueprintNativeEvent: 
    /// This function is designed to be overridden by a blueprint, but also has a native implementation.
    /// Provide a body named [FunctionName]_Implementation instead of [FunctionName]; the autogenerated
    /// code will include a thunk that calls the implementation method when necessary.
    UFUNCTION(BlueprintNativeEvent, BlueprintCallable)
    UAnimMontage *GetHitReactMontage();

    virtual void Die() = 0;
};
